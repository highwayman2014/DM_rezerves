Процедура СозатьПакетПеремещений()
	СписокДанныхДляЗакупки = Новый СписокЗначений;
	
	СписокСкладов = Новый СписокЗначений;
	СписокСкладов.Добавить(Справочники.СтруктурныеЕдиницы.НайтиПоКоду("00-000001"));//Склад основной
	СписокСкладов.Добавить(Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ФР-000003"));//Склад 2
	СписокСкладов.Добавить(Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ФР-000009"));//Склад ЛКМ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	               |	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ЗаказПокупателяЗапасы.Количество КАК Количество
	               |ПОМЕСТИТЬ ВТ_ТоварыЗаказаПокупателя
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	               |ГДЕ
	               |	ЗаказПокупателяЗапасы.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |	ЗапасыНаСкладахОстатки.Ячейка КАК Ячейка,
	               |	ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ЗапасыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ВТ_Остаки
	               |ИЗ
	               |	РегистрНакопления.ЗапасыНаСкладах.Остатки(
	               |			&МоментВремени,
	               |			Номенклатура В
	               |					(ВЫБРАТЬ
	               |						ВТ_ТоварыЗаказаПокупателя.Номенклатура
	               |					ИЗ
	               |						ВТ_ТоварыЗаказаПокупателя)
	               |				И СтруктурнаяЕдиница В (&СписокСкладов)) КАК ЗапасыНаСкладахОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	RMS_РезервыПодЗаказНарядОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |	RMS_РезервыПодЗаказНарядОстатки.Номенклатура КАК Номенклатура,
	               |	RMS_РезервыПодЗаказНарядОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ВТ_Резервы
	               |ИЗ
	               |	РегистрНакопления.RMS_РезервыПодЗаказНаряд.Остатки(
	               |			&МоментВремени,
	               |			Номенклатура В
	               |					(ВЫБРАТЬ
	               |						ВТ_ТоварыЗаказаПокупателя.Номенклатура
	               |					ИЗ
	               |						ВТ_ТоварыЗаказаПокупателя)
	               |				И СтруктурнаяЕдиница В (&СписокСкладов)) КАК RMS_РезервыПодЗаказНарядОстатки
	               |ГДЕ
	               |	RMS_РезервыПодЗаказНарядОстатки.КоличествоОстаток > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Остаки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |	ВТ_Остаки.Ячейка КАК Ячейка,
	               |	ВТ_Остаки.Номенклатура КАК Номенклатура,
	               |	ВТ_Остаки.КоличествоОстаток - ЕСТЬNULL(ВТ_Резервы.КоличествоОстаток, 0) КАК ОстатокБезРезерва
	               |ПОМЕСТИТЬ ВТ_ОстаткиМинусРезервы
	               |ИЗ
	               |	ВТ_Остаки КАК ВТ_Остаки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Резервы КАК ВТ_Резервы
	               |		ПО ВТ_Остаки.СтруктурнаяЕдиница = ВТ_Резервы.СтруктурнаяЕдиница
	               |			И ВТ_Остаки.Номенклатура = ВТ_Резервы.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТоварыЗаказаПокупателя.Номенклатура КАК Номенклатура,
	               |	ЕСТЬNULL(ВТ_ОстаткиМинусРезервы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК СтруктурнаяЕдиница,
	               |	ЕСТЬNULL(ВТ_ОстаткиМинусРезервы.Ячейка, ЗНАЧЕНИЕ(Справочник.Ячейки.ПустаяСсылка)) КАК Ячейка,
	               |	ВТ_ТоварыЗаказаПокупателя.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_ТоварыЗаказаПокупателя.Количество КАК Количество,
	               |	ЕСТЬNULL(ВТ_ОстаткиМинусРезервы.ОстатокБезРезерва, 0) КАК Остаток,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_ОстаткиМинусРезервы.СтруктурнаяЕдиница.Код, """") = ""00-000001""
	               |			ТОГДА 1
	               |		КОГДА ЕСТЬNULL(ВТ_ОстаткиМинусРезервы.СтруктурнаяЕдиница.Код, """") = ""ФР-000003""
	               |			ТОГДА 2
	               |		КОГДА ЕСТЬNULL(ВТ_ОстаткиМинусРезервы.СтруктурнаяЕдиница.Код, """") = ""ФР-000009""
	               |			ТОГДА 3
	               |		ИНАЧЕ 4
	               |	КОНЕЦ КАК ПриоритетСклада
	               |ИЗ
	               |	ВТ_ТоварыЗаказаПокупателя КАК ВТ_ТоварыЗаказаПокупателя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиМинусРезервы КАК ВТ_ОстаткиМинусРезервы
	               |		ПО ВТ_ТоварыЗаказаПокупателя.Номенклатура = ВТ_ОстаткиМинусРезервы.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПриоритетСклада
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Остаток)
	               |ПО
	               |	СтруктурнаяЕдиница";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени()); 
	Запрос.УстановитьПараметр("СписокСкладов", СписокСкладов);
	Результат = Запрос.Выполнить();
	ВыборкаСклад = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Перемещено = 0;
	Пока ВыборкаСклад.Следующий() Цикл
		Если Перемещено >= ВыборкаСклад.Количество Тогда
			Прервать; //Переместили всё, что было нужно
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВыборкаСклад.СтруктурнаяЕдиница) Тогда //Если склад пустой, тогда на остатках ничего нет и мы сразу приготовим данные для закупки
			
			ВыборкаТоваров = ВыборкаСклад.Выбрать();
			Пока ВыборкаТоваров.Следующий() Цикл
				СписокДанныхДляЗакупки.Добавить(Новый Структура("Номенклатура, Количество", ВыборкаТоваров.Номенклатура, ВыборкаТоваров.Количество));
			КонецЦикла;
		Иначе	
			ДокПеремещениеЗапасов = Документы.ПеремещениеЗапасов.СоздатьДокумент();
			ВыборкаТоваров = ВыборкаСклад.Выбрать();
			Пока ВыборкаТоваров.Следующий() Цикл
				Если ВыборкаТоваров.Количество <= ВыборкаТоваров.Остаток Тогда
					НовСтрЗапасы 					   = ДокПеремещениеЗапасов.Запасы.Добавить();
					НовСтрЗапасы.Номенклатура		   = ВыборкаТоваров.Номенклатура;
					НовСтрЗапасы.ЕдиницаИзмерения	   = ВыборкаТоваров.ЕдиницаИзмерения;
					НовСтрЗапасы.Количество			   = ВыборкаТоваров.Количество;
					НовСтрЗапасы.Резерв				   = 0;
					НовСтрЗапасы.итсЯчейка 			   = ВыборкаТоваров.Ячейка;
					НовСтрЗапасы.итсСтруктурнаяЕдиница = ВыборкаТоваров.СтруктурнаяЕдиница;
					НовСтрЗапасы.ЗаказПокупателя 	   = Ссылка;
					НовСтрЗапасы.итсВыдано		 	   = Ложь;
					Перемещено = Перемещено + ВыборкаТоваров.Количество;
				Иначе
					СписокДанныхДляЗакупки.Добавить(Новый Структура("Номенклатура, Количество", ВыборкаТоваров.Номенклатура, ВыборкаТоваров.Количество));
				КонецЕсли;
			КонецЦикла;
			Если ДокПеремещениеЗапасов.Запасы.Количество() > 0 Тогда
				ДокПеремещениеЗапасов.Организация 				   = Справочники.Организации.ОрганизацияПоУмолчанию();
				ДокПеремещениеЗапасов.Автор 					   = Пользователи.ТекущийПользователь();
				ДокПеремещениеЗапасов.итсСРазныхЯчеек 			   = Истина;
				ДокПеремещениеЗапасов.СтруктурнаяЕдиница		   = ВыборкаСклад.СтруктурнаяЕдиница;
				ДокПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("00-000001");
				ДокПеремещениеЗапасов.ЯчейкаПолучатель 			   = Справочники.Ячейки.НайтиПоКоду("000000460",,, ДокПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель);
				ДокПеремещениеЗапасов.ЗаказПокупателя 			   = Ссылка;
				ДокПеремещениеЗапасов.ВидОперации 				   = Перечисления.ВидыОперацийПеремещениеЗапасов.Перемещение;
				ДокПеремещениеЗапасов.ХозяйственнаяОперация 	   = Справочники.ХозяйственныеОперации.Перемещение;
				ДокПеремещениеЗапасов.Дата 						   = ТекущаяДата();
				ДокПеремещениеЗапасов.УстановитьНовыйНомер();
				ДокПеремещениеЗапасов.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если СписокДанныхДляЗакупки.Количество() > 0 Тогда
		СоздатьЗаявкиНаЗакупку(СписокДанныхДляЗакупки);
	КонецЕсли;
КонецПроцедуры
