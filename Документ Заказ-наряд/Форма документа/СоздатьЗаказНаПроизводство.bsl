&НаСервере
Функция СоздатьЗаказНаПроизводство(Выборка = Неопределено, ВыбСклад, ВидОперации)
	ЗаказНаПрво = Документы.ЗаказНаПроизводство.СоздатьДокумент();
	ЗаказНаПрво.Дата = ТекущаяДата();
	ЗаказНаПрво.ДокументОснование = Объект.Ссылка;
	ЗаказНаПрво.Автор = Пользователи.ТекущийПользователь();
	МассивСотрПольз = РегистрыСведений.СотрудникиПользователя.ПолучитьСотрудниковПользователя(ЗаказНаПрво.Автор);
	ЗаказНаПрво.Ответственный = ?(МассивСотрПольз.Количество() > 0, МассивСотрПольз[0], Справочники.Сотрудники.ПустаяСсылка());
	ЗаказНаПрво.ВидОперации = ВидОперации;
	ЗаказНаПрво.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	ЗаказНаПрво.СостояниеЗаказа = Справочники.СостоянияЗаказовНаПроизводство.НайтиПоНаименованию("Открыт");
	ЗаказНаПрво.Старт = НачалоДня(ТекущаяДата());
	ЗаказНаПрво.Финиш = ЗаказНаПрво.Старт + 60 * 60 * 1;
	ЗаказНаПрво.СтруктурнаяЕдиница = ВыбСклад;
	ЗаказНаПрво.СтруктурнаяЕдиницаРезерв = ВыбСклад;
	ЗаказНаПрво.ХозяйственнаяОперация = ?(Строка(ВидОперации) = "Разборка", Справочники.ХозяйственныеОперации.Разборка, Справочники.ХозяйственныеОперации.Сборка);
	
	//-->СмирновПВ - внимание, для разборки заполняем заказ из "Запасы", и возвращаем его ссылку (дальше в запрос не идем)
	Если Выборка = Неопределено Тогда
		Для Каждого Стр Из Объект.Запасы Цикл
			НоваяСтрока = ЗаказНаПрво.Продукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
			РаботаСНоменклатуройСервер.ЗаполнитьДанныеВСтрокеТабличнойЧасти(ЗаказНаПрво, "Продукция", НоваяСтрока);
		КонецЦикла;
		
		ЗаказНаПрво.ЗаполнитьТабличнуюЧастьПоСпецификации(Новый Массив);
		ЗаказНаПрво.УстановитьНовыйНомер();
		ЗаказНаПрво.Комментарий = "Создан на основании: " + Объект.Ссылка;
		ЗаказНаПрво.Записать(РежимЗаписиДокумента.Проведение);
		Возврат ЗаказНаПрво.Ссылка;
	КонецЕсли;
	//<--СмирновПВ - внимание, для разборки заполняем заказ из "Запасы", и возвращаем его ссылку (дальше в запрос не идем)
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ЗаказНаПрво.Продукция.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		РаботаСНоменклатуройСервер.ЗаполнитьДанныеВСтрокеТабличнойЧасти(ЗаказНаПрво, "Продукция", НоваяСтрока);
	КонецЦикла;
	
	ЗаказНаПрво.ЗаполнитьТабличнуюЧастьПоСпецификации(Новый Массив);
	ЗаказНаПрво.УстановитьНовыйНомер();
	ЗаказНаПрво.Комментарий = "Создан на основании: " + Объект.Ссылка;
	ЗаказНаПрво.Записать(РежимЗаписиДокумента.Проведение);
	
	ЗапросЗапчасти = Новый Запрос;
	ЗапросЗапчасти.Текст = "ВЫБРАТЬ
	                       |	ЗаказНаПроизводствоЗапасы.Номенклатура КАК Номенклатура,
	                       |	СУММА(ЗаказНаПроизводствоЗапасы.Количество) КАК Количество,
	                       |	ЗаказНаПроизводствоЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	                       |ПОМЕСТИТЬ ВТ_ДанныеЗаказНаПрво
	                       |ИЗ
	                       |	Документ.ЗаказНаПроизводство.Запасы КАК ЗаказНаПроизводствоЗапасы
	                       |ГДЕ
	                       |	(ЗаказНаПроизводствоЗапасы.Номенклатура.Родитель.Наименование = ""автозапчасти""
	                       |			ИЛИ ЗаказНаПроизводствоЗапасы.Номенклатура.Родитель.Наименование = ""Шиномонтаж"")
	                       |	И ЗаказНаПроизводствоЗапасы.Ссылка = &Ссылка
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	ЗаказНаПроизводствоЗапасы.Номенклатура,
	                       |	ЗаказНаПроизводствоЗапасы.ЕдиницаИзмерения
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	                       |	ЗапасыНаСкладахОстатки.КоличествоОстаток - ВЫБОР
	                       |		КОГДА ЕСТЬNULL(RMS_РезервыПодЗаказНарядОстатки.КоличествоОстаток, 0) < 0
	                       |			ТОГДА 0
	                       |		ИНАЧЕ ЕСТЬNULL(RMS_РезервыПодЗаказНарядОстатки.КоличествоОстаток, 0)
	                       |	КОНЕЦ КАК СвободныйОстаток
	                       |ПОМЕСТИТЬ ВТ_СвободныеОстатки
	                       |ИЗ
	                       |	РегистрНакопления.ЗапасыНаСкладах.Остатки(
	                       |			&ТекущаяДата,
	                       |			Номенклатура В
	                       |					(ВЫБРАТЬ
	                       |						ВТ_ДанныеЗаказНаПрво.Номенклатура
	                       |					ИЗ
	                       |						ВТ_ДанныеЗаказНаПрво)
	                       |				И СтруктурнаяЕдиница = &ВыбСклад) КАК ЗапасыНаСкладахОстатки
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.RMS_РезервыПодЗаказНаряд.Остатки(
	                       |				&ТекущаяДата,
	                       |				Номенклатура В
	                       |						(ВЫБРАТЬ
	                       |							ВТ_ДанныеЗаказНаПрво.Номенклатура
	                       |						ИЗ
	                       |							ВТ_ДанныеЗаказНаПрво)
	                       |					И НЕ асЗаказНаряд = &ЗаказНаряд
	                       |					И СтруктурнаяЕдиница = &ВыбСклад) КАК RMS_РезервыПодЗаказНарядОстатки
	                       |		ПО ЗапасыНаСкладахОстатки.Номенклатура = RMS_РезервыПодЗаказНарядОстатки.Номенклатура
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	ВТ_ДанныеЗаказНаПрво.Номенклатура КАК Номенклатура,
	                       |	ВТ_ДанныеЗаказНаПрво.Количество КАК Количество,
	                       |	ВТ_ДанныеЗаказНаПрво.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       |	ЕСТЬNULL(ВТ_СвободныеОстатки.СвободныйОстаток, 0) КАК СвободныйОстаток
	                       |ИЗ
	                       |	ВТ_ДанныеЗаказНаПрво КАК ВТ_ДанныеЗаказНаПрво
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныеОстатки КАК ВТ_СвободныеОстатки
	                       |		ПО ВТ_ДанныеЗаказНаПрво.Номенклатура = ВТ_СвободныеОстатки.Номенклатура";
	ЗапросЗапчасти.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	ЗапросЗапчасти.УстановитьПараметр("Ссылка", ЗаказНаПрво.Ссылка);
	ЗапросЗапчасти.УстановитьПараметр("ЗаказНаряд", ЗаказНаПрво.ДокументОснование);
	ЗапросЗапчасти.УстановитьПараметр("ВыбСклад", ВыбСклад);
	РезультатЗапчасти = ЗапросЗапчасти.Выполнить();
	//Смирнов_ПВ - если нет Запчастей для перемещения, тогда переходим сразу в произовдсто, иначе переместим товар
	Если РезультатЗапчасти.Пустой() Тогда
		СоздатьПроизводство(ЗаказНаПрво.Ссылка, ВыбСклад);
	Иначе
		СтрукутраДанныхДляПеремещения = Новый Структура("СсылкаЗаказПрво, ВыборкаЗапчасти", ЗаказНаПрво.Ссылка, РезультатЗапчасти.Выбрать());
		ПереместитьЗапчастьВПроизводство(СтрукутраДанныхДляПеремещения, ВыбСклад);
	КонецЕсли;
	
КонецФункции
