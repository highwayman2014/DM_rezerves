&НаСервере
Функция ПринятьРезервЗавершениеНаСервере(Источник, Приемщик, ЭтоПриемщик)
	
	ТекстПредупреждения = "";
	
	НачатьТранзакцию();
	
	Попытка
		
		ВыделенныеСтроки = Элементы.МатериалыЗаказчика.ВыделенныеСтроки;
		
		// Проверка наличия/отсутствия удаляемого товара в перемещениях приемника
		ТоварВПеремещенияхИсточника = ПроверитьУдаляемыйТовар(Приемщик);
		
		Если ТоварВПеремещенияхИсточника.Количество() > 0 Тогда
			
			Для Каждого НайденныйТовар Из ТоварВПеремещенияхИсточника Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'По принимающему заказ-наряду номенклатура %1%2%3 уже была выдана, передать позицию невозможно'"),
					НайденныйТовар.Номенклатура,
					?(ЗначениеЗаполнено(НайденныйТовар.Характеристика), " с характеристикой ",         ""),
					?(ЗначениеЗаполнено(НайденныйТовар.Характеристика), НайденныйТовар.Характеристика, "")));
			КонецЦикла;
			
			ОтменитьТранзакцию();
			Возврат "";
			
		КонецЕсли;
		
		// Проверка наличия/отсутствия удаляемого товара в перемещениях источника
		ТоварВПеремещенияхПриемника = ПроверитьУдаляемыйТовар(Источник);
		
		Если ТоварВПеремещенияхПриемника.Количество() > 0 Тогда
			
			Для Каждого НайденныйТовар Из ТоварВПеремещенияхПриемника Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'По передающему заказ-наряду номенклатура %1%2%3 уже была выдана, передать позицию невозможно'"),
					НайденныйТовар.Номенклатура,
					?(ЗначениеЗаполнено(НайденныйТовар.Характеристика), " с характеристикой ",         ""),
					?(ЗначениеЗаполнено(НайденныйТовар.Характеристика), НайденныйТовар.Характеристика, "")));
			КонецЦикла;
			
			ОтменитьТранзакцию();
			Возврат "";
			
		КонецЕсли;
		
		// Выгрузка товаров из выделенных строк
		ТаблицаМатериалов = Объект.МатериалыЗаказчика.Выгрузить(, "Номенклатура, Характеристика, Количество");
		ТаблицаМатериалов.Очистить();
		
		Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
			
			НоваяСтрока = ТаблицаМатериалов.Добавить();
			СтрокаМатериала = Объект.МатериалыЗаказчика.НайтиПоИдентификатору(ИдентификаторСтроки);
			
			Если СтрокаМатериала <> Неопределено Тогда
				
				НоваяСтрока.Номенклатура   = СтрокаМатериала.Номенклатура;
				НоваяСтрока.Характеристика = СтрокаМатериала.Характеристика;
				НоваяСтрока.Количество     = СтрокаМатериала.Количество;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Получение заказов и имеющихся в них материалов, которые нужно передать
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаМатериалов.Номенклатура КАК Номенклатура,
			|	ТаблицаМатериалов.Характеристика КАК Характеристика,
			|	ТаблицаМатериалов.Количество КАК Количество
			|ПОМЕСТИТЬ ВТТаблицаМатериалов
			|ИЗ
			|	&ТаблицаМатериалов КАК ТаблицаМатериалов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТТаблицаМатериалов.Номенклатура КАК Номенклатура,
			|	ВТТаблицаМатериалов.Характеристика КАК Характеристика,
			|	СУММА(ВТТаблицаМатериалов.Количество) КАК Количество
			|ПОМЕСТИТЬ ВТТаблицаМатериаловИтог
			|ИЗ
			|	ВТТаблицаМатериалов КАК ВТТаблицаМатериалов
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТТаблицаМатериалов.Номенклатура,
			|	ВТТаблицаМатериалов.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Прямой проверки наличия в принимающем заказ-наряде выбранного товара
			|ВЫБРАТЬ
			|	асЗаказНарядМатериалыЗаказчика.Номенклатура КАК Номенклатура,
			|	асЗаказНарядМатериалыЗаказчика.Характеристика КАК Характеристика,
			|	СУММА(асЗаказНарядМатериалыЗаказчика.Количество) КАК Количество
			|ПОМЕСТИТЬ ВТМатериалыПриемщика
			|ИЗ
			|	Документ.асЗаказНаряд.МатериалыЗаказчика КАК асЗаказНарядМатериалыЗаказчика
			|ГДЕ
			|	асЗаказНарядМатериалыЗаказчика.Ссылка = &СсылкаПриемщика
			|
			|СГРУППИРОВАТЬ ПО
			|	асЗаказНарядМатериалыЗаказчика.Номенклатура,
			|	асЗаказНарядМатериалыЗаказчика.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	асЗаказНарядМатериалыЗаказчика.Номенклатура КАК Номенклатура,
			|	асЗаказНарядМатериалыЗаказчика.Характеристика КАК Характеристика,
			|	СУММА(асЗаказНарядМатериалыЗаказчика.Количество) КАК Количество
			|ПОМЕСТИТЬ ВТМатериалыИсточника
			|ИЗ
			|	Документ.асЗаказНаряд.МатериалыЗаказчика КАК асЗаказНарядМатериалыЗаказчика
			|ГДЕ
			|	асЗаказНарядМатериалыЗаказчика.Ссылка = &СсылкаИсточника
			|
			|СГРУППИРОВАТЬ ПО
			|	асЗаказНарядМатериалыЗаказчика.Номенклатура,
			|	асЗаказНарядМатериалыЗаказчика.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА RMS_РезервыПодЗаказНаряд.Период
			|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|		КОНЕЦ) КАК ДатаПоследнегоПрихода,
			|	RMS_РезервыПодЗаказНаряд.Номенклатура КАК Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика КАК Характеристика,
			|	RMS_РезервыПодЗаказНаряд.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР
			|			КОГДА RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА RMS_РезервыПодЗаказНаряд.Количество
			|			ИНАЧЕ -1 * RMS_РезервыПодЗаказНаряд.Количество
			|		КОНЕЦ) КАК Количество
			|ПОМЕСТИТЬ ВТРезервыИсточника
			|ИЗ
			|	РегистрНакопления.RMS_РезервыПодЗаказНаряд КАК RMS_РезервыПодЗаказНаряд
			|ГДЕ
			|	RMS_РезервыПодЗаказНаряд.Регистратор = &СсылкаИсточника
			|
			|СГРУППИРОВАТЬ ПО
			|	RMS_РезервыПодЗаказНаряд.Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика,
			|	RMS_РезервыПодЗаказНаряд.СтруктурнаяЕдиница
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА RMS_РезервыПодЗаказНаряд.Количество
			|			ИНАЧЕ -1 * RMS_РезервыПодЗаказНаряд.Количество
			|		КОНЕЦ) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	RMS_РезервыПодЗаказНаряд.Номенклатура КАК Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика КАК Характеристика,
			|	RMS_РезервыПодЗаказНаряд.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	СУММА(ВЫБОР
			|			КОГДА RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА RMS_РезервыПодЗаказНаряд.Количество
			|			ИНАЧЕ -1 * RMS_РезервыПодЗаказНаряд.Количество
			|		КОНЕЦ) КАК Количество
			|ПОМЕСТИТЬ ВТРезервыПриемщика
			|ИЗ
			|	РегистрНакопления.RMS_РезервыПодЗаказНаряд КАК RMS_РезервыПодЗаказНаряд
			|ГДЕ
			|	RMS_РезервыПодЗаказНаряд.Регистратор = &СсылкаПриемщика
			|
			|СГРУППИРОВАТЬ ПО
			|	RMS_РезервыПодЗаказНаряд.Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика,
			|	RMS_РезервыПодЗаказНаряд.СтруктурнаяЕдиница
			|
			|ИМЕЮЩИЕ
			|	СУММА(ВЫБОР
			|			КОГДА RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА RMS_РезервыПодЗаказНаряд.Количество
			|			ИНАЧЕ -1 * RMS_РезервыПодЗаказНаряд.Количество
			|		КОНЕЦ) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаказПоставщикуЗапасы.Ссылка КАК ЗаказПоставщику,
			|	ЗаказПоставщикуЗапасы.Ссылка.Дата КАК ДатаЗаказа,
			|	ЗаказПоставщикуЗапасы.Номенклатура КАК Номенклатура,
			|	ЗаказПоставщикуЗапасы.Характеристика КАК Характеристика,
			|	ЗаказПоставщикуЗапасы.Количество КАК Количество
			|ПОМЕСТИТЬ ВТЗаказыПриемщика
			|ИЗ
			|	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
			|ГДЕ
			|	ЗаказПоставщикуЗапасы.Ссылка.дм_НомерЗаказНаряда = &НомерЗНПриемщик
			|	И НАЧАЛОПЕРИОДА(ЗаказПоставщикуЗапасы.Ссылка.дм_ДатаЗаказНаряда, ГОД) = НАЧАЛОПЕРИОДА(&ДатаЗНПриемщик, ГОД)
			|	И ЗаказПоставщикуЗапасы.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И ЗаказПоставщикуЗапасы.Ссылка.Проведен = ИСТИНА
			|	И ЗаказПоставщикуЗапасы.Ссылка.дмЗаказНаДавальческоеСырье = ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Формирование таблица с заказами приемника и самим приемником для определения дат последних приходов
			|ВЫБРАТЬ
			|	ВТЗаказыПриемщика.ЗаказПоставщику КАК ЗаказПоставщику,
			|	ВТЗаказыПриемщика.ДатаЗаказа КАК Дата
			|ПОМЕСТИТЬ ВТЗаказыПриемщикаДаты
			|ИЗ
			|	ВТЗаказыПриемщика КАК ВТЗаказыПриемщика
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТЗаказыПриемщика.ЗаказПоставщику,
			|	ВТЗаказыПриемщика.ДатаЗаказа
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&СсылкаПриемщика,
			|	&ДатаЗНПриемщик
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Формирование таблица с заказами источника и самим источником для определения дат последних приходов
			|ВЫБРАТЬ
			|	ЗаказПоставщику.Ссылка КАК ЗаказПоставщику,
			|	ЗаказПоставщику.Дата КАК Дата
			|ПОМЕСТИТЬ ВТЗаказыИсточника
			|ИЗ
			|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
			|ГДЕ
			|	ЗаказПоставщику.дм_НомерЗаказНаряда = &НомерЗНИсточник
			|	И НАЧАЛОПЕРИОДА(ЗаказПоставщику.дм_ДатаЗаказНаряда, ГОД) = НАЧАЛОПЕРИОДА(&ДатаЗНИсточник, ГОД)
			|	И ЗаказПоставщику.ПометкаУдаления = ЛОЖЬ
			|	И ЗаказПоставщику.Проведен = ИСТИНА
			|	И ЗаказПоставщику.дмЗаказНаДавальческоеСырье = ИСТИНА
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&СсылкаИсточника,
			|	&ДатаЗНИсточник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Объединение полученных данных в одну таблицу
			|ВЫБРАТЬ
			|	ВТТаблицаМатериаловИтог.Номенклатура КАК Номенклатура,
			|	ВТТаблицаМатериаловИтог.Характеристика КАК Характеристика,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА ЕСТЬNULL(ВТРезервыИсточника.Количество, 0) <> 0
			|				ТОГДА ВТРезервыИсточника.СтруктурнаяЕдиница
			|			КОГДА ЕСТЬNULL(ВТРезервыПриемщика.Количество, 0) <> 0
			|				ТОГДА ВТРезервыПриемщика.СтруктурнаяЕдиница
			|		КОНЕЦ) КАК Склад,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
			|			КОГДА ЕСТЬNULL(ВТРезервыИсточника.Количество, 0) <> 0
			|				ТОГДА ВТРезервыИсточника.СтруктурнаяЕдиница
			|			КОГДА ЕСТЬNULL(ВТРезервыПриемщика.Количество, 0) <> 0
			|				ТОГДА ВТРезервыПриемщика.СтруктурнаяЕдиница
			|		КОНЕЦ) КАК КоличествоСкладов,
			|	МАКСИМУМ(ВТТаблицаМатериаловИтог.Количество) КАК КоличествоПередается,
			|	СУММА(ЕСТЬNULL(ВТЗаказыПриемщика.Количество, 0)) КАК КоличествоТребуется,
			|	СУММА(ЕСТЬNULL(ВТРезервыИсточника.Количество, 0)) КАК РезервыИсточника,
			|	СУММА(ЕСТЬNULL(ВТРезервыПриемщика.Количество, 0)) КАК РезервыПриемщика,
			|	СУММА(ЕСТЬNULL(ВТМатериалыПриемщика.Количество, 0)) КАК МатериалыПриемщика,
			|	СУММА(ЕСТЬNULL(ВТМатериалыИсточника.Количество, 0)) КАК МатериалыИсточника,
			|	МАКСИМУМ(ЕСТЬNULL(ВТРезервыИсточника.ДатаПоследнегоПрихода, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПоследнегоПрихода
			|ПОМЕСТИТЬ ВТТаблицаОбъединенная
			|ИЗ
			|	ВТТаблицаМатериаловИтог КАК ВТТаблицаМатериаловИтог
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаказыПриемщика КАК ВТЗаказыПриемщика
			|		ПО ВТТаблицаМатериаловИтог.Номенклатура = ВТЗаказыПриемщика.Номенклатура
			|			И ВТТаблицаМатериаловИтог.Характеристика = ВТЗаказыПриемщика.Характеристика
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезервыИсточника КАК ВТРезервыИсточника
			|		ПО ВТТаблицаМатериаловИтог.Номенклатура = ВТРезервыИсточника.Номенклатура
			|			И ВТТаблицаМатериаловИтог.Характеристика = ВТРезервыИсточника.Характеристика
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезервыПриемщика КАК ВТРезервыПриемщика
			|		ПО ВТТаблицаМатериаловИтог.Номенклатура = ВТРезервыПриемщика.Номенклатура
			|			И ВТТаблицаМатериаловИтог.Характеристика = ВТРезервыПриемщика.Характеристика
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМатериалыПриемщика КАК ВТМатериалыПриемщика
			|		ПО ВТТаблицаМатериаловИтог.Номенклатура = ВТМатериалыПриемщика.Номенклатура
			|			И ВТТаблицаМатериаловИтог.Характеристика = ВТМатериалыПриемщика.Характеристика
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМатериалыИсточника КАК ВТМатериалыИсточника
			|		ПО ВТТаблицаМатериаловИтог.Номенклатура = ВТМатериалыИсточника.Номенклатура
			|			И ВТТаблицаМатериаловИтог.Характеристика = ВТМатериалыИсточника.Характеристика
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТТаблицаМатериаловИтог.Номенклатура,
			|	ВТТаблицаМатериаловИтог.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение дат последних приходов по заказам приемника и самому приемнику
			|ВЫБРАТЬ
			|	МАКСИМУМ(RMS_РезервыПодЗаказНаряд.Период) КАК ДатаПоследнегоПрихода,
			|	RMS_РезервыПодЗаказНаряд.Регистратор КАК ЗаказПоставщику,
			|	RMS_РезервыПодЗаказНаряд.Номенклатура КАК Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика КАК Характеристика
			|ИЗ
			|	ВТЗаказыПриемщикаДаты КАК ВТЗаказыПриемщикаДаты
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.RMS_РезервыПодЗаказНаряд КАК RMS_РезервыПодЗаказНаряд
			|		ПО ВТЗаказыПриемщикаДаты.ЗаказПоставщику = RMS_РезервыПодЗаказНаряд.Регистратор
			|ГДЕ
			|	(RMS_РезервыПодЗаказНаряд.Регистратор ССЫЛКА Документ.ЗаказПоставщику
			|		ИЛИ RMS_РезервыПодЗаказНаряд.Регистратор = &СсылкаПриемщика)
			|	И RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	RMS_РезервыПодЗаказНаряд.Регистратор,
			|	RMS_РезервыПодЗаказНаряд.Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение дат последних приходов по заказам источника и самому источнику
			|ВЫБРАТЬ
			|	МАКСИМУМ(RMS_РезервыПодЗаказНаряд.Период) КАК ДатаПоследнегоПрихода,
			|	RMS_РезервыПодЗаказНаряд.Регистратор КАК ЗаказПоставщику,
			|	RMS_РезервыПодЗаказНаряд.Номенклатура КАК Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика КАК Характеристика
			|ИЗ
			|	ВТЗаказыИсточника КАК ВТЗаказыИсточника
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.RMS_РезервыПодЗаказНаряд КАК RMS_РезервыПодЗаказНаряд
			|		ПО ВТЗаказыИсточника.ЗаказПоставщику = RMS_РезервыПодЗаказНаряд.Регистратор
			|ГДЕ
			|	(RMS_РезервыПодЗаказНаряд.Регистратор ССЫЛКА Документ.ЗаказПоставщику
			|		ИЛИ RMS_РезервыПодЗаказНаряд.Регистратор = &СсылкаИсточника)
			|	И RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	RMS_РезервыПодЗаказНаряд.Регистратор,
			|	RMS_РезервыПодЗаказНаряд.Номенклатура,
			|	RMS_РезервыПодЗаказНаряд.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение итоговой таблицы сводных данных
			|ВЫБРАТЬ
			|	ВТТаблицаОбъединенная.Номенклатура КАК Номенклатура,
			|	ВТТаблицаОбъединенная.Характеристика КАК Характеристика,
			|	ВТТаблицаОбъединенная.Склад КАК Склад,
			|	ВТТаблицаОбъединенная.КоличествоСкладов КАК КоличествоСкладов,
			|	ВТТаблицаОбъединенная.КоличествоПередается КАК КоличествоПередается,
			|	ВТТаблицаОбъединенная.КоличествоТребуется КАК КоличествоТребуется,
			|	ВТТаблицаОбъединенная.РезервыИсточника КАК РезервыИсточника,
			|	ВТТаблицаОбъединенная.РезервыПриемщика КАК РезервыПриемщика,
			|	ВТТаблицаОбъединенная.МатериалыПриемщика КАК МатериалыПриемщика,
			|	ВТТаблицаОбъединенная.МатериалыИсточника КАК МатериалыИсточника,
			|	ВТТаблицаОбъединенная.ДатаПоследнегоПрихода КАК ДатаПоследнегоПрихода
			|ИЗ
			|	ВТТаблицаОбъединенная КАК ВТТаблицаОбъединенная
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение списка заказов источника
			|ВЫБРАТЬ
			|	ВТЗаказыИсточника.ЗаказПоставщику КАК ЗаказПоставщику
			|ИЗ
			|	ВТЗаказыИсточника КАК ВТЗаказыИсточника
			|ГДЕ
			|	ВТЗаказыИсточника.ЗаказПоставщику <> &СсылкаИсточника
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВТЗаказыИсточника.Дата
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение списка заказов приемника со складом из движения резерва
			|ВЫБРАТЬ
			|	ВТЗаказыПриемщикаДаты.ЗаказПоставщику КАК ЗаказПоставщику
			|ИЗ
			|	ВТЗаказыПриемщикаДаты КАК ВТЗаказыПриемщикаДаты
			|ГДЕ
			|	ВТЗаказыПриемщикаДаты.ЗаказПоставщику <> &СсылкаПриемщика
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВТЗаказыПриемщикаДаты.Дата";
		
		Запрос.УстановитьПараметр("ТаблицаМатериалов", ТаблицаМатериалов);
		Запрос.УстановитьПараметр("ДатаЗНИсточник",    НачалоДня(Источник.Дата));
		Запрос.УстановитьПараметр("НомерЗНИсточник",   Источник.Номер);
		Запрос.УстановитьПараметр("СсылкаИсточника",   Источник.Ссылка);
		Запрос.УстановитьПараметр("ДатаЗНПриемщик",    НачалоДня(Приемщик.Дата));
		Запрос.УстановитьПараметр("НомерЗНПриемщик",   Приемщик.Номер);
		Запрос.УстановитьПараметр("СсылкаПриемщика",   Приемщик.Ссылка);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		ТаблицаДатПриходовПр  = МассивРезультатов[МассивРезультатов.Количество() - 5].Выгрузить();
		ТаблицаДатПриходовИст = МассивРезультатов[МассивРезультатов.Количество() - 4].Выгрузить();
		ТаблицаМатериалов     = МассивРезультатов[МассивРезультатов.Количество() - 3].Выгрузить();
		
		НовыйЗаказПоставщику = Документы.ЗаказПоставщику.ПустаяСсылка();
		
		Для Каждого СтрокаМатериала Из ТаблицаМатериалов Цикл
			
			ВыборкаЗаказыИсточника = МассивРезультатов[МассивРезультатов.Количество() - 2].Выбрать();
			ВыборкаЗаказыПриемщика = МассивРезультатов[МассивРезультатов.Количество() - 1].Выбрать();
			
			// Добавление прямой проверки наличия в принимающем заказ-наряде выбранного товара
			Если СтрокаМатериала.МатериалыПриемщика = 0 Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'Резерв не изменен. В принимающем заказ-наряде не требуется запчасть %1'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Проверка совпадения количества в закупках запчастей
			Если СтрокаМатериала.МатериалыПриемщика <> СтрокаМатериала.МатериалыИсточника Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'Запчасть %1 под закупку. Количество различается. Резерв не изменен'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Проверка наличия передаваемого сырья и в заказах поставщику документа-приемщика, и в его резервах
			Если СтрокаМатериала.КоличествоТребуется > 0 И СтрокаМатериала.РезервыПриемщика > 0 Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'Для принимающего документа невозможно передать резерв по материалу %1. Резерв не изменен'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Проверка наличия передаваемого сырья в заказах поставщику и в резервах документа-источника
			Если СтрокаМатериала.КоличествоПередается <= 0 И СтрокаМатериала.РезервыИсточника <= 0 Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'В передающем документе по материалу %1 нет резерва, доступного для передачи. Резерв не изменен'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Проверка наличия резервов по передаваемому сырью на одном складе
			Если СтрокаМатериала.РезервыИсточника > 0 И СтрокаМатериала.РезервыПриемщика > 0
					И СтрокаМатериала.КоличествоСкладов >= 2 Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'Для данных документов невозможно выполнить передачу резерва по материалу %1 из-за нахождения на нескольких складах. Резерв не изменен'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Определение даты последнего прихода по приемнику и его заказам покупателя
			ДатаПоследнегоЗаказа_Приемник = Дата(1,1,1,0,0,0);
			
			ОтборСтрокДаты = Новый Структура("Номенклатура,Характеристика",
							СтрокаМатериала.Номенклатура,
							СтрокаМатериала.Характеристика);
			НайденныеСтрокиДаты = ТаблицаДатПриходовПр.НайтиСтроки(ОтборСтрокДаты);
			
			Для каждого СтрокаДаты Из НайденныеСтрокиДаты Цикл
				Если ДатаПоследнегоЗаказа_Приемник < СтрокаДаты.ДатаПоследнегоПрихода Тогда
					ДатаПоследнегоЗаказа_Приемник = СтрокаДаты.ДатаПоследнегоПрихода;
				КонецЕсли;
			КонецЦикла;
			
			// Проверка наличия приходов резервов по приемнику и заполнение пустых дат
			Если НЕ ЗначениеЗаполнено(ДатаПоследнегоЗаказа_Приемник) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'В принимающем документе по материалу %1 не удалось обнаружить резерв. Резерв не изменен'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Определение даты последнего прихода по источнику и его заказам покупателя
			ДатаПоследнегоЗаказа_Источник = Дата(1,1,1,0,0,0);
			
			ОтборСтрокДаты = Новый Структура("Номенклатура,Характеристика",
							СтрокаМатериала.Номенклатура,
							СтрокаМатериала.Характеристика);
			НайденныеСтрокиДаты = ТаблицаДатПриходовИст.НайтиСтроки(ОтборСтрокДаты);
			
			Для каждого СтрокаДаты Из НайденныеСтрокиДаты Цикл
				Если ДатаПоследнегоЗаказа_Источник < СтрокаДаты.ДатаПоследнегоПрихода Тогда
					ДатаПоследнегоЗаказа_Источник = СтрокаДаты.ДатаПоследнегоПрихода;
				КонецЕсли;
			КонецЦикла;
			
			// Проверка наличия приходов резервов по приемнику и заполнение пустых дат
			Если НЕ ЗначениеЗаполнено(ДатаПоследнегоЗаказа_Источник) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
					НСтр("ru = 'В передающем документе по материалу %1 не удалось обнаружить резерв. Резерв не изменен'"),
					СтрокаМатериала.Номенклатура));
				
				ОтменитьТранзакцию();
				Возврат "";
				
			КонецЕсли;
			
			// Изменение даты движений в документах заказов источника
			Пока ВыборкаЗаказыИсточника.Следующий() Цикл
				
				НаборЗаписейИсточника = РегистрыНакопления.RMS_РезервыПодЗаказНаряд.СоздатьНаборЗаписей();
				НаборЗаписейИсточника.Отбор.Регистратор.Установить(ВыборкаЗаказыИсточника.ЗаказПоставщику);
				НаборЗаписейИсточника.Прочитать();
				
				КоличествоЗаписей = НаборЗаписейИсточника.Количество();
				
				Для Сч = 1 По КоличествоЗаписей Цикл
					
					ЗаписьИсточника = НаборЗаписейИсточника[КоличествоЗаписей-Сч];
					
					Если ЗаписьИсточника.Номенклатура = СтрокаМатериала.Номенклатура
							И ЗаписьИсточника.Характеристика = СтрокаМатериала.Характеристика Тогда
						ЗаписьИсточника.Период = ДатаПоследнегоЗаказа_Приемник;
					КонецЕсли;
					
				КонецЦикла;
				
				НаборЗаписейИсточника.Записать();
				
			КонецЦикла;
			
			// Изменение даты движений в документах заказов приемника
			Пока ВыборкаЗаказыПриемщика.Следующий() Цикл
				
				НаборЗаписейПриемщика = РегистрыНакопления.RMS_РезервыПодЗаказНаряд.СоздатьНаборЗаписей();
				НаборЗаписейПриемщика.Отбор.Регистратор.Установить(ВыборкаЗаказыПриемщика.ЗаказПоставщику);
				НаборЗаписейПриемщика.Прочитать();
				
				КоличествоЗаписей = НаборЗаписейПриемщика.Количество();
				
				Для Сч = 1 По КоличествоЗаписей Цикл
					
					ЗаписьПриемщика = НаборЗаписейПриемщика[КоличествоЗаписей-Сч];
					
					Если ЗаписьПриемщика.Номенклатура = СтрокаМатериала.Номенклатура
							И ЗаписьПриемщика.Характеристика = СтрокаМатериала.Характеристика Тогда
						ЗаписьПриемщика.Период = ДатаПоследнегоЗаказа_Источник;
					КонецЕсли;
					
				КонецЦикла;
				
				НаборЗаписейПриемщика.Записать();
				
			КонецЦикла;
			
			// Изменение даты движений передающего заказ-наряда
			НаборЗаписейИсточника = РегистрыНакопления.RMS_РезервыПодЗаказНаряд.СоздатьНаборЗаписей();
			НаборЗаписейИсточника.Отбор.Регистратор.Установить(Источник);
			НаборЗаписейИсточника.Прочитать();
			
			КоличествоЗаписей = НаборЗаписейИсточника.Количество();
			
			Для Сч = 1 По КоличествоЗаписей Цикл
				
				ЗаписьИсточника = НаборЗаписейИсточника[КоличествоЗаписей-Сч];
				
				Если ЗаписьИсточника.Номенклатура = СтрокаМатериала.Номенклатура
						И ЗаписьИсточника.Характеристика = СтрокаМатериала.Характеристика Тогда
					ЗаписьИсточника.Период = ДатаПоследнегоЗаказа_Приемник;
				КонецЕсли;
				
			КонецЦикла;
			
			НаборЗаписейИсточника.Записать();
			
			// Изменение даты движений принимающего заказ-наряда
			НаборЗаписейПриемщика = РегистрыНакопления.RMS_РезервыПодЗаказНаряд.СоздатьНаборЗаписей();
			НаборЗаписейПриемщика.Отбор.Регистратор.Установить(Приемщик);
			НаборЗаписейПриемщика.Прочитать();
			
			КоличествоЗаписей = НаборЗаписейПриемщика.Количество();
			
			Для Сч = 1 По КоличествоЗаписей Цикл
				
				ЗаписьПриемщика = НаборЗаписейПриемщика[КоличествоЗаписей-Сч];
				
				Если ЗаписьПриемщика.Номенклатура = СтрокаМатериала.Номенклатура
						И ЗаписьПриемщика.Характеристика = СтрокаМатериала.Характеристика Тогда
					ЗаписьПриемщика.Период = ДатаПоследнегоЗаказа_Источник;
				КонецЕсли;
				
			КонецЦикла;
			
			НаборЗаписейПриемщика.Записать();
			
			// Передача записи регистра "Закупка запчастей" от источника к приемнику
			МассивУдаляемыхЗаписейИсточника = Новый Массив;
			МассивУдаляемыхЗаписейПриемника = Новый Массив;
			
			// Пометка строк, которые нужно переместить и удалить
			НаборЗаписейИсточника = РегистрыСведений.асЗакупкаЗапчастей.СоздатьНаборЗаписей();
			НаборЗаписейИсточника.Отбор.ЗаказНаряд.Установить(Источник);
			НаборЗаписейИсточника.Отбор.Номенклатура.Установить(СтрокаМатериала.Номенклатура);
			НаборЗаписейИсточника.Прочитать();
			
			Для Каждого ЗаписьИсточника Из НаборЗаписейИсточника Цикл
				Если ЗаписьИсточника.дмДатаОтмены = Дата(1,1,1,0,0,0) ИЛИ ЗаписьИсточника.дмПричинаОтмены = "" Тогда
					МассивУдаляемыхЗаписейИсточника.Добавить(ЗаписьИсточника);
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписейПриемщика = РегистрыСведений.асЗакупкаЗапчастей.СоздатьНаборЗаписей();
			НаборЗаписейПриемщика.Отбор.ЗаказНаряд.Установить(Приемщик);
			НаборЗаписейПриемщика.Отбор.Номенклатура.Установить(СтрокаМатериала.Номенклатура);
			НаборЗаписейПриемщика.Прочитать();
			
			Для Каждого ЗаписьПриемщика Из НаборЗаписейПриемщика Цикл
				Если ЗаписьПриемщика.дмДатаОтмены = Дата(1,1,1,0,0,0) ИЛИ ЗаписьПриемщика.дмПричинаОтмены = "" Тогда
					МассивУдаляемыхЗаписейПриемника.Добавить(ЗаписьПриемщика);
				КонецЕсли;
			КонецЦикла;
			
			// Создание новых записей в наборах и удаление старых
			КоличествоЗаписейИсточника = МассивУдаляемыхЗаписейИсточника.Количество();
			КоличествоЗаписейПриемщика = МассивУдаляемыхЗаписейПриемника.Количество();
			
			Если (КоличествоЗаписейИсточника > 0 И КоличествоЗаписейПриемщика > 0)
					ИЛИ (КоличествоЗаписейИсточника = 0 И КоличествоЗаписейПриемщика > 0) Тогда
				
				Для Каждого ЗаписьИсточника Из МассивУдаляемыхЗаписейИсточника Цикл
					
					НоваяЗаписьПриемщика = НаборЗаписейПриемщика.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗаписьПриемщика, ЗаписьИсточника);
					НоваяЗаписьПриемщика.ЗаказНаряд = Приемщик;
					
					НаборЗаписейИсточника.Удалить(ЗаписьИсточника);
					
				КонецЦикла;
				
				Для Каждого ЗаписьПриемника Из МассивУдаляемыхЗаписейПриемника Цикл
					
					НоваяЗаписьИсточника = НаборЗаписейИсточника.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗаписьИсточника, ЗаписьПриемника);
					НоваяЗаписьИсточника.ЗаказНаряд = Источник;
					
					НаборЗаписейПриемщика.Удалить(ЗаписьПриемника);
					
				КонецЦикла;
				
			ИначеЕсли КоличествоЗаписейИсточника > 0 И КоличествоЗаписейПриемщика = 0 Тогда
				
				ЗаписьТекущейДатой = Неопределено;
				
				Для Каждого ЗаписьИсточника Из МассивУдаляемыхЗаписейИсточника Цикл
					
					НоваяЗаписьПриемщика = НаборЗаписейПриемщика.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗаписьПриемщика, ЗаписьИсточника);
					НоваяЗаписьПриемщика.ЗаказНаряд = Приемщик;
					
					// Двух записей по одной номенклатуре от текущей даты не может быть, поэтому они складываются в одну
					Если ЗаписьТекущейДатой = Неопределено Тогда
						
						ЗаписьИсточника.Период       = ТекущаяДата();
						ЗаписьИсточника.ДатаЗаказа   = Дата(1,1,1,0,0,0);
						ЗаписьИсточника.ДатаПоставки = Дата(1,1,1,0,0,0);
						ЗаписьИсточника.Поставщик    = Справочники.Контрагенты.ПустаяСсылка();
						ЗаписьИсточника.Поставлено   = 0;
						ЗаписьИсточника.Комментарий  = "";
						
						ЗаписьТекущейДатой = ЗаписьИсточника;
						
					Иначе
						
						ЗаписьТекущейДатой.Количество = ЗаписьТекущейДатой.Количество + ЗаписьИсточника.Количество;
						
						НаборЗаписейИсточника.Удалить(ЗаписьИсточника);
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			НаборЗаписейИсточника.Записать();
			НаборЗаписейПриемщика.Записать();
			
			ТекстПредупреждения = ТекстПредупреждения + СтрШаблон(НСтр("ru = 'Резерв запчасти %1 %3 %2. В передающем документе заказана повторно!'"),
				СтрокаМатериала.Номенклатура,
				?(ЭтоПриемщик, Источник.Номер,           Приемщик.Номер),
				?(ЭтоПриемщик, "принят из заказ-наряда", "передан в заказ-наряд"));
			
		КонецЦикла;
		
		// Всегда первым должен перепроводиться приемник
		Если НЕ ЭтоПриемщик Тогда
			
			НовыйДокумент = Приемщик.ПолучитьОбъект();
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;
		
		// Запись текущего документа
		Если Объект.Проведен Тогда
			ДокументЗаписан = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		Иначе
			ДокументЗаписан = Записать();
		КонецЕсли;
		
		Если НЕ ДокументЗаписан Тогда
			
			Если ЭтоПриемщик Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать документ. Резерв не принят'"));
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать документ. Резерв не передан'"));
			КонецЕсли;
			
			ОтменитьТранзакцию();
			Возврат "";
			
		КонецЕсли;
		
		Если ЭтоПриемщик Тогда
			
			НовыйДокумент = Источник.ПолучитьОбъект();
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(
			НСтр("ru = 'Не удалось %2 резерв по причине: %1'"),
			ОписаниеОшибки(),
			?(ЭтоПриемщик, "принять", "передать")));
		
		ОтменитьТранзакцию();
		Возврат "";
		
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ЗаполнитьДанныеПоОстаткамНаСкладеХранения();
	КонецЕсли;
	
	Элементы.ЗакупкиЗапчастей1.Обновить();
	
	Возврат ТекстПредупреждения;
	
КонецФункции
// --- Инфостарт #4898 15.10.2021
