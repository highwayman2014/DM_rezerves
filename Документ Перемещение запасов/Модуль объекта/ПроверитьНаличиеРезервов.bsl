// +++ Инфостарт 29.09.2021 Добавление проверки очередности списания резервов
Функция ПроверитьНаличиеРезервов(ДвиженияРезервы)
	
	РезервыНоменклатуры = Новый ТаблицаЗначений;
	РезервыНоменклатуры.Колонки.Добавить("асЗаказНаряд", Новый ОписаниеТипов("ДокументСсылка.асЗаказНаряд"));
	РезервыНоменклатуры.Колонки.Добавить("Номенклатура");
	РезервыНоменклатуры.Колонки.Добавить("Характеристика");
	РезервыНоменклатуры.Колонки.Добавить("СкладУчета");
	РезервыНоменклатуры.Колонки.Добавить("РезервТекущегоЗаказНаряда", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(40)));
	РезервыНоменклатуры.Колонки.Добавить("Количество");
	
	Запрос = Новый Запрос;
	
	// +++ Инфостарт 13.12.2021 Добавление учета аналогов
	Если НЕ ПолучитьФункциональнуюОпцию("дмИспользоватьАналоги") Тогда
	// --- Инфостарт 13.12.2021
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд КАК асЗаказНаряд,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд.Подразделение КАК Подразделение,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.Номенклатура КАК Номенклатура,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница
			|	КОНЕЦ КАК СкладУчета,
			|	СУММА(RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоПриход - RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоРасход) КАК Количество,
			|	МИНИМУМ(RMS_РезервыПодЗаказНарядОстаткиИОбороты.Период) КАК ДатаРезерва
			|ПОМЕСТИТЬ ВТ_Резервы
			|ИЗ
			|	РегистрНакопления.RMS_РезервыПодЗаказНаряд.ОстаткиИОбороты(
			|			,
			|			,
			|			Секунда,
			|			,
			|			Номенклатура В (&Номенклатура)
			|				И Характеристика В (&Характеристика)
			|				И Организация = &Организация) КАК RMS_РезервыПодЗаказНарядОстаткиИОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд.Подразделение,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.Номенклатура,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.Характеристика,
			|	ВЫБОР
			|		КОГДА RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница
			|	КОНЕЦ
			|
			|ИМЕЮЩИЕ
			|	СУММА(RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоПриход - RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоРасход) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	дмСкладыДавальческогоСырьяПоПодразделениямКрш.Подразделение КАК Подразделение,
			|	ВЫБОР
			|		КОГДА дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья
			|	КОНЕЦ КАК СкладДавальческогоСырья
			|ИЗ
			|	РегистрСведений.дмСкладыДавальческогоСырьяПоПодразделениямКрш КАК дмСкладыДавальческогоСырьяПоПодразделениямКрш
			|
			|СГРУППИРОВАТЬ ПО
			|	дмСкладыДавальческогоСырьяПоПодразделениямКрш.Подразделение,
			|	ВЫБОР
			|		КОГДА дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
			|	ЗапасыНаСкладахОстатки.Характеристика КАК Характеристика,
			|	СУММА(ЗапасыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ЗапасыНаСкладах.Остатки(
			|			,
			|			Номенклатура В (&Номенклатура)
			|				И Характеристика В (&Характеристика)
			|				И Организация = &Организация) КАК ЗапасыНаСкладахОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗапасыНаСкладахОстатки.Номенклатура,
			|	ЗапасыНаСкладахОстатки.Характеристика,
			|	ВЫБОР
			|		КОГДА ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Резервы.асЗаказНаряд КАК асЗаказНаряд,
			|	ВТ_Резервы.Подразделение КАК Подразделение,
			|	ВТ_Резервы.Номенклатура КАК Номенклатура,
			|	ВТ_Резервы.Характеристика КАК Характеристика,
			|	ВТ_Резервы.СкладУчета КАК СкладУчета,
			|	ВТ_Резервы.Количество КАК Количество,
			|	ВТ_Резервы.ДатаРезерва КАК ДатаРезерва
			|ИЗ
			|	ВТ_Резервы КАК ВТ_Резервы
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаРезерва
			|ИТОГИ ПО
			|	Номенклатура,
			|	Характеристика";
		
	// +++ Инфостарт 13.12.2021 Добавление учета аналогов
	Иначе
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблНоменклатура.Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ ВТ_ТоварыЗН
			|ИЗ
			|	&ТаблНоменклатура КАК ТаблНоменклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Поиск оригиналов по аналогам номенклатуры из заказ-наряда
			|ВЫБРАТЬ
			|	ВТ_ТоварыЗН.Номенклатура КАК Номенклатура,
			|	МАКСИМУМ(ЕСТЬNULL(АналогиНоменклатуры.Номенклатура, ВТ_ТоварыЗН.Номенклатура)) КАК НоменклатураОригинал
			|ПОМЕСТИТЬ ВТ_НайденныеОригиналы
			|ИЗ
			|	ВТ_ТоварыЗН КАК ВТ_ТоварыЗН
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
			|		ПО ВТ_ТоварыЗН.Номенклатура = АналогиНоменклатуры.Аналог
			|ГДЕ
			|	ВТ_ТоварыЗН.Номенклатура.дмЭтоАналог
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ТоварыЗН.Номенклатура
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			// Объединение найденных оригиналов с оригиналами товаров из документа
			|ВЫБРАТЬ
			|	ВТ_ТоварыЗН.Номенклатура КАК Номенклатура,
			|	ВТ_ТоварыЗН.Номенклатура КАК НоменклатураОригинал
			|ИЗ
			|	ВТ_ТоварыЗН КАК ВТ_ТоварыЗН
			|ГДЕ
			|	НЕ ВТ_ТоварыЗН.Номенклатура.дмЭтоАналог
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ТоварыЗН.Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение аналогов по найденным оригиналам (оригинал-аналог)
			|ВЫБРАТЬ
			|	ВТ_НайденныеОригиналы.НоменклатураОригинал КАК Номенклатура,
			|	АналогиНоменклатуры.Аналог КАК НоменклатураАналог
			|ПОМЕСТИТЬ ВТ_ТоварыОригиналы
			|ИЗ
			|	ВТ_НайденныеОригиналы КАК ВТ_НайденныеОригиналы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
			|		ПО ВТ_НайденныеОригиналы.НоменклатураОригинал = АналогиНоменклатуры.Номенклатура
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			// Добавление строк оригинал-оригинал для получения остатков
			|ВЫБРАТЬ
			|	ВТ_НайденныеОригиналы.НоменклатураОригинал,
			|	ВТ_НайденныеОригиналы.НоменклатураОригинал
			|ИЗ
			|	ВТ_НайденныеОригиналы КАК ВТ_НайденныеОригиналы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Группировка всех строк оригинал-аналог для исключения дублей
			|ВЫБРАТЬ
			|	ВТ_ТоварыОригиналы.Номенклатура КАК Номенклатура,
			|	ВТ_ТоварыОригиналы.НоменклатураАналог КАК НоменклатураАналог
			|ПОМЕСТИТЬ ВТ_ВсеОригиналыАналоги
			|ИЗ
			|	ВТ_ТоварыОригиналы КАК ВТ_ТоварыОригиналы
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ТоварыОригиналы.Номенклатура,
			|	ВТ_ТоварыОригиналы.НоменклатураАналог
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение резервов товаров в разрезе оригиналов
			|ВЫБРАТЬ
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд КАК асЗаказНаряд,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд.Подразделение КАК Подразделение,
			|	ВТ_ВсеОригиналыАналоги.Номенклатура КАК Номенклатура,
			|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
			|	ВЫБОР
			|		КОГДА RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница
			|	КОНЕЦ КАК СкладУчета,
			|	СУММА(ЕСТЬNULL(RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоПриход, 0) - ЕСТЬNULL(RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоРасход, 0)) КАК Количество,
			|	МИНИМУМ(RMS_РезервыПодЗаказНарядОстаткиИОбороты.Период) КАК ДатаРезерва
			|ПОМЕСТИТЬ ВТ_Резервы
			|ИЗ
			|	ВТ_ВсеОригиналыАналоги КАК ВТ_ВсеОригиналыАналоги
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.RMS_РезервыПодЗаказНаряд.ОстаткиИОбороты(
			|				,
			|				,
			|				Секунда,
			|				,
			|				Номенклатура В (ВЫБРАТЬ Аналоги.НоменклатураАналог ИЗ ВТ_ВсеОригиналыАналоги КАК Аналоги)
			|					И Организация = &Организация) КАК RMS_РезервыПодЗаказНарядОстаткиИОбороты
			|		ПО ВТ_ВсеОригиналыАналоги.НоменклатураАналог = RMS_РезервыПодЗаказНарядОстаткиИОбороты.Номенклатура
			|
			|СГРУППИРОВАТЬ ПО
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд,
			|	RMS_РезервыПодЗаказНарядОстаткиИОбороты.асЗаказНаряд.Подразделение,
			|	ВТ_ВсеОригиналыАналоги.Номенклатура,
			|	ВЫБОР
			|		КОГДА RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ RMS_РезервыПодЗаказНарядОстаткиИОбороты.СтруктурнаяЕдиница
			|	КОНЕЦ
			|
			|ИМЕЮЩИЕ
			|	СУММА(ЕСТЬNULL(RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоПриход, 0) - ЕСТЬNULL(RMS_РезервыПодЗаказНарядОстаткиИОбороты.КоличествоРасход, 0)) > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Группировка номенклатуры с её оригиналами
			|ВЫБРАТЬ
			|	ВТ_НайденныеОригиналы.Номенклатура КАК Номенклатура,
			|	ВТ_НайденныеОригиналы.НоменклатураОригинал КАК НоменклатураОригинал
			|ИЗ
			|	ВТ_НайденныеОригиналы КАК ВТ_НайденныеОригиналы
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_НайденныеОригиналы.Номенклатура,
			|	ВТ_НайденныеОригиналы.НоменклатураОригинал
			|;
			|
			|//////////////////////////////////////////////////////////////////////////////// 
			// Получение давальческих складов по подразделениям
			|ВЫБРАТЬ
			|	дмСкладыДавальческогоСырьяПоПодразделениямКрш.Подразделение КАК Подразделение,
			|	ВЫБОР
			|		КОГДА дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья
			|	КОНЕЦ КАК СкладДавальческогоСырья
			|ИЗ
			|	РегистрСведений.дмСкладыДавальческогоСырьяПоПодразделениямКрш КАК дмСкладыДавальческогоСырьяПоПодразделениямКрш
			|
			|СГРУППИРОВАТЬ ПО
			|	дмСкладыДавальческогоСырьяПоПодразделениямКрш.Подразделение,
			|	ВЫБОР
			|		КОГДА дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ дмСкладыДавальческогоСырьяПоПодразделениямКрш.СкладДавальческогоСырья
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			// Получение остатков в разрезе оригиналов
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВТ_ВсеОригиналыАналоги.Номенклатура КАК Номенклатура,
			|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
			|	СУММА(ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток
			|ИЗ
			|	ВТ_ВсеОригиналыАналоги КАК ВТ_ВсеОригиналыАналоги
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
			|				,
			|				Номенклатура В (ВЫБРАТЬ Аналоги.НоменклатураАналог ИЗ ВТ_ВсеОригиналыАналоги КАК Аналоги)
			|					И Организация = &Организация) КАК ЗапасыНаСкладахОстатки
			|		ПО ВТ_ВсеОригиналыАналоги.НоменклатураАналог = ЗапасыНаСкладахОстатки.Номенклатура
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ВсеОригиналыАналоги.Номенклатура,
			|	ВЫБОР
			|		КОГДА ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.дмРаспределятьРезервЗапчастейНаСкладе
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			|		ИНАЧЕ ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Резервы.асЗаказНаряд КАК асЗаказНаряд,
			|	ВТ_Резервы.Подразделение КАК Подразделение,
			|	ВТ_Резервы.Номенклатура КАК Номенклатура,
			|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
			|	ВТ_Резервы.СкладУчета КАК СкладУчета,
			|	ВТ_Резервы.Количество КАК Количество,
			|	ВТ_Резервы.ДатаРезерва КАК ДатаРезерва
			|ИЗ
			|	ВТ_Резервы КАК ВТ_Резервы
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаРезерва
			|ИТОГИ ПО
			|	Номенклатура,
			|	Характеристика";
			
		Запрос.УстановитьПараметр("ТаблНоменклатура", ДвиженияРезервы.Скопировать(, "Номенклатура"));
		
	КонецЕсли;
	// --- Инфостарт 13.12.2021
	
	Запрос.УстановитьПараметр("Организация",    Организация);
	// +++ Инфостарт Васильев А.Э. 10.11.2021
	//Запрос.УстановитьПараметр("Номенклатура",   Запасы.Выгрузить(, "Номенклатура"));
	//Запрос.УстановитьПараметр("Характеристика", Запасы.Выгрузить(, "Характеристика"));
	Запрос.УстановитьПараметр("Номенклатура",   ДвиженияРезервы.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Характеристика", ДвиженияРезервы.ВыгрузитьКолонку("Характеристика"));
	// --- Инфостарт Васильев А.Э. 10.11.2021	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// +++ Инфостарт 13.12.2021 Добавление учета аналогов товаров
	//ТаблицаДавСкладов = РезультатЗапроса[1].Выгрузить();
	//ТаблицаОстатков   = РезультатЗапроса[2].Выгрузить();
	//ВыборкаТоваров    = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ПолучитьФункциональнуюОпцию("дмИспользоватьАналоги") Тогда
		ТаблицаОригиналов = РезультатЗапроса[РезультатЗапроса.Количество() - 4].Выгрузить();
	КонецЕсли;
	
	ТаблицаДавСкладов = РезультатЗапроса[РезультатЗапроса.Количество() - 3].Выгрузить();
	ТаблицаОстатков   = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выгрузить();
	ВыборкаТоваров    = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// --- Инфостарт 13.12.2021
	
	ПустойСклад = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	
	// Перенос полученных данных в таблицу
	Пока ВыборкаТоваров.Следующий() Цикл
		
		ВыборкаХарактеристик = ВыборкаТоваров.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаХарактеристик.Следующий() Цикл
			
			ВыборкаРезервов = ВыборкаХарактеристик.Выбрать();
			
			Пока ВыборкаРезервов.Следующий() Цикл
				
				НоваяСтрока = РезервыНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезервов);
				НоваяСтрока.РезервТекущегоЗаказНаряда = "Ожидание наличия";
				
				ОтборДавСклада = Новый Структура("Подразделение", ВыборкаРезервов.Подразделение);
				НайденныеДавСклады = ТаблицаДавСкладов.НайтиСтроки(ОтборДавСклада);
				
				КоличествоРезерва = ВыборкаРезервов.Количество;
				
				// Обработка заказов, в которых к подразделению указаны давальческие склады (один или несколько)
				Если НайденныеДавСклады.Количество() > 0 И ВыборкаРезервов.СкладУчета <> ПустойСклад Тогда
					
					ЧастичноОтгружен = Ложь;
					
					Для Каждого ДавСклад Из НайденныеДавСклады Цикл
						
						ОтборОстатка = Новый Структура;
						ОтборОстатка.Вставить("СтруктурнаяЕдиница", ДавСклад.СкладДавальческогоСырья);
						ОтборОстатка.Вставить("Номенклатура",       ВыборкаТоваров.Номенклатура);
						ОтборОстатка.Вставить("Характеристика",     ВыборкаХарактеристик.Характеристика);
						НайденныеОстатки = ТаблицаОстатков.НайтиСтроки(ОтборОстатка);
						
						Если НайденныеОстатки.Количество() > 0 И КоличествоРезерва > 0 Тогда
							
							ОстатокНаСкладе = НайденныеОстатки[0].КоличествоОстаток;
							
							Если ОстатокНаСкладе >= КоличествоРезерва Тогда
								
								НайденныеОстатки[0].КоличествоОстаток = ОстатокНаСкладе - КоличествоРезерва;
								НоваяСтрока.РезервТекущегоЗаказНаряда = "Готов к выдаче";
								
								КоличествоРезерва = 0;
								ЧастичноОтгружен = Истина;
								
							ИначеЕсли ОстатокНаСкладе < КоличествоРезерва И ОстатокНаСкладе > 0 Тогда
								
								НоваяСтрока.Количество                = НайденныеОстатки[0].КоличествоОстаток;
								НоваяСтрока.РезервТекущегоЗаказНаряда = "Частично готов к выдаче";
								НайденныеОстатки[0].КоличествоОстаток = 0;
								
								КоличествоРезерва = КоличествоРезерва - ОстатокНаСкладе;
								ЧастичноОтгружен = Истина;
								
							ИначеЕсли ОстатокНаСкладе <= 0 Тогда
								
								НоваяСтрока.Количество                = 0;
								НоваяСтрока.РезервТекущегоЗаказНаряда = "Ожидание наличия";
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
					Если НоваяСтрока.РезервТекущегоЗаказНаряда = "Ожидание наличия" И ЧастичноОтгружен Тогда
						НоваяСтрока.РезервТекущегоЗаказНаряда = "Частично готов к выдаче";
					КонецЕсли;
					
				// Обработка заказ-нарядов без давальческих складов
				Иначе
					
					ОтборОстатка = Новый Структура;
					ОтборОстатка.Вставить("СтруктурнаяЕдиница", ВыборкаРезервов.СкладУчета);
					ОтборОстатка.Вставить("Номенклатура",       ВыборкаТоваров.Номенклатура);
					ОтборОстатка.Вставить("Характеристика",     ВыборкаХарактеристик.Характеристика);
					НайденныеОстатки = ТаблицаОстатков.НайтиСтроки(ОтборОстатка);
					
					Если НайденныеОстатки.Количество() > 0 Тогда
						
						ОстатокНаСкладе = НайденныеОстатки[0].КоличествоОстаток;
						
						Если ОстатокНаСкладе >= ВыборкаРезервов.Количество Тогда
							
							НайденныеОстатки[0].КоличествоОстаток = ОстатокНаСкладе - ВыборкаРезервов.Количество;
							НоваяСтрока.РезервТекущегоЗаказНаряда = "Готов к выдаче";
							
						ИначеЕсли ОстатокНаСкладе < ВыборкаРезервов.Количество И ОстатокНаСкладе > 0 Тогда
							
							НоваяСтрока.Количество                = НайденныеОстатки[0].КоличествоОстаток;
							НоваяСтрока.РезервТекущегоЗаказНаряда = "Частично готов к выдаче";
							НайденныеОстатки[0].КоличествоОстаток = 0;
							
						ИначеЕсли ОстатокНаСкладе <= 0 Тогда
							
							НоваяСтрока.Количество                = 0;
							НоваяСтрока.РезервТекущегоЗаказНаряда = "Ожидание наличия";
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Проверка наличия резерва выполняется только для новых движений. На случай изменения и повторного проведения документа
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДвиженияРезервы.ВидДвижения КАК ВидДвижения,
		|	ДвиженияРезервы.Номенклатура КАК Номенклатура,
		|	ДвиженияРезервы.Характеристика КАК Характеристика,
		|	ДвиженияРезервы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ДвиженияРезервы.асЗаказНаряд КАК асЗаказНаряд,
		|	ДвиженияРезервы.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ДвиженияРезервы
		|ИЗ
		|	&ДвиженияРезервы КАК ДвиженияРезервы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДвиженияРезервы.Номенклатура КАК Номенклатура,
		|	ВТ_ДвиженияРезервы.Характеристика КАК Характеристика,
		|	ВТ_ДвиженияРезервы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ВТ_ДвиженияРезервы.асЗаказНаряд КАК асЗаказНаряд,
		|	ВЫБОР
		|		КОГДА ВТ_ДвиженияРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -1 * ВТ_ДвиженияРезервы.Количество
		|		ИНАЧЕ ВТ_ДвиженияРезервы.Количество
		|	КОНЕЦ КАК Количество
		|ПОМЕСТИТЬ ВТ_НовыеРезервы
		|ИЗ
		|	ВТ_ДвиженияРезервы КАК ВТ_ДвиженияРезервы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	RMS_РезервыПодЗаказНаряд.Номенклатура,
		|	RMS_РезервыПодЗаказНаряд.Характеристика,
		|	RMS_РезервыПодЗаказНаряд.СтруктурнаяЕдиница,
		|	RMS_РезервыПодЗаказНаряд.асЗаказНаряд,
		|	ВЫБОР
		|		КОГДА RMS_РезервыПодЗаказНаряд.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА RMS_РезервыПодЗаказНаряд.Количество
		|		ИНАЧЕ -1 * RMS_РезервыПодЗаказНаряд.Количество
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.RMS_РезервыПодЗаказНаряд КАК RMS_РезервыПодЗаказНаряд
		|ГДЕ
		|	RMS_РезервыПодЗаказНаряд.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НовыеРезервы.Номенклатура КАК Номенклатура,
		|	ВТ_НовыеРезервы.Характеристика КАК Характеристика,
		|	ВТ_НовыеРезервы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ВТ_НовыеРезервы.асЗаказНаряд КАК асЗаказНаряд,
		|	СУММА(ВТ_НовыеРезервы.Количество) КАК Количество
		|ИЗ
		|	ВТ_НовыеРезервы КАК ВТ_НовыеРезервы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НовыеРезервы.Характеристика,
		|	ВТ_НовыеРезервы.СтруктурнаяЕдиница,
		|	ВТ_НовыеРезервы.Номенклатура,
		|	ВТ_НовыеРезервы.асЗаказНаряд
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_НовыеРезервы.Количество) > 0";
	
	Запрос.УстановитьПараметр("Ссылка",          Ссылка);
	Запрос.УстановитьПараметр("ДвиженияРезервы", ДвиженияРезервы);
	
	ТекстСообщения = "";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОтборРезервов = Новый Структура;
		
		// +++ Инфостарт 19.11.2021 Поиск оригинала товара
		//ОтборРезервов.Вставить("Номенклатура",   ВыборкаДетальныеЗаписи.Номенклатура);
		//ОтборРезервов.Вставить("Характеристика", ВыборкаДетальныеЗаписи.Характеристика);
		Если ПолучитьФункциональнуюОпцию("дмИспользоватьАналоги") Тогда
			
			ОригиналТовара = ВыборкаДетальныеЗаписи.Номенклатура;
			
			ОтборОригинала = Новый Структура("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
			НайденныйОригинал = ТаблицаОригиналов.НайтиСтроки(ОтборОригинала);
			
			Если НайденныйОригинал.Количество() > 0 И ЗначениеЗаполнено(НайденныйОригинал[0].НоменклатураОригинал) Тогда
				ОригиналТовара = НайденныйОригинал[0].НоменклатураОригинал;
			КонецЕсли;
			
			ОтборРезервов.Вставить("Номенклатура", ОригиналТовара);
			
		Иначе
			
			ОтборРезервов.Вставить("Номенклатура",   ВыборкаДетальныеЗаписи.Номенклатура);
			ОтборРезервов.Вставить("Характеристика", ВыборкаДетальныеЗаписи.Характеристика);
			
		КонецЕсли;
		// --- Инфостарт 19.11.2021
		
		ОтборРезервов.Вставить("СкладУчета",     ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница);
		ОтборРезервов.Вставить("асЗаказНаряд",   ВыборкаДетальныеЗаписи.асЗаказНаряд);
		НайденныеРезервы = РезервыНоменклатуры.НайтиСтроки(ОтборРезервов);
		
		КоличествоГотово = 0;
		
		Для каждого НайденныйРезерв Из НайденныеРезервы Цикл
			КоличествоГотово = КоличествоГотово + НайденныйРезерв.Количество;
		КонецЦикла;
		
		Если КоличествоГотово < ВыборкаДетальныеЗаписи.Количество Тогда
			ТекстСообщения = ТекстСообщения + СтрШаблон(
				НСтр("ru = 'Товар %1 на складе %2 по заказ-наряду %3 не готов к выдаче'"),
				ВыборкаДетальныеЗаписи.Номенклатура,
				ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница,
				ВыборкаДетальныеЗаписи.асЗаказНаряд);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТекстСообщения;
	
КонецФункции
// --- Инфостарт 09.08.2021

